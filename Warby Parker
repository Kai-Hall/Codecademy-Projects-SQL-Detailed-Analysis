-- task 1: Select all columns from the first 10 rows. What columns does the table have?
SELECT *
FROM survey
LIMIT 10;
-- question, user_id, response
-- task 2
/*SELECT question, COUNT(*)
FROM survey
GROUP BY 1;*/
-- task 3
/* Percentage of users who moved onto the next funnel based on the previous
N/A
95.00%
80.00%
95.00%
74.79%
*/

/* Percentage of users who answered this question based on the number who answered the first question
100.00%
95.00%
76.00%
72.20%
54.00%
*/
-- task 4
/*SELECT *
FROM quiz
LIMIT 5;
SELECT *
FROM home_try_on
LIMIT 5;
SELECT *
FROM purchase
LIMIT 5;*/
-- I'm not writing down the name of each column, too long read for yourself
-- task 5
/*SELECT SUBSTR(q.user_id,1,8) AS 'user_id' , CASE
  WHEN q.user_id = h.user_id THEN 'True'
  ELSE 'False'
  END AS 'is_home_try_on', CASE
  WHEN h.number_of_pairs NOT NULL THEN SUBSTR(h.number_of_pairs,1,2)
  ELSE 'NULL'
  END AS 'number_of_pairs', CASE
  WHEN h.user_id = p.user_id THEN 'True'
  ELSE 'False'
  END AS 'is_purchase'
FROM quiz AS q
LEFT JOIN  home_try_on AS  h
  ON q.user_id = h.user_id
LEFT JOIN purchase AS p
  ON q.user_id = p.user_id
LIMIT 10;*/
-- task 6

/*WITH cleaned_data AS (
  SELECT SUBSTR(q.user_id,1,8) AS 'user_id' , CASE
    WHEN q.user_id = h.user_id THEN 'True'
    ELSE 'False'
    END AS 'is_home_try_on', CASE
    WHEN h.number_of_pairs NOT NULL THEN SUBSTR(h.number_of_pairs,1,2)
    ELSE 'NULL'
    END AS 'number_of_pairs', CASE
    WHEN h.user_id = p.user_id THEN 'True'
    ELSE 'False'
    END AS 'is_purchase'
  FROM quiz AS q
  LEFT JOIN  home_try_on AS  h
    ON q.user_id = h.user_id
  LEFT JOIN purchase AS p
    ON q.user_id = p.user_id
)
SELECT number_of_pairs, COUNT(DISTINCT(user_id)) AS 'No.recipients', is_purchase
FROM cleaned_data
GROUP BY number_of_pairs,is_purchase/;*/

/*WITH cleaned_data AS (
  SELECT SUBSTR(q.user_id,1,8) AS 'user_id' , CASE
    WHEN q.user_id = h.user_id THEN 'True'
    ELSE 'False'
    END AS 'is_home_try_on', CASE
    WHEN h.number_of_pairs NOT NULL THEN SUBSTR(h.number_of_pairs,1,2)
    ELSE 'NULL'
    END AS 'number_of_pairs', CASE
    WHEN h.user_id = p.user_id THEN 'True'
    ELSE 'False'
    END AS 'is_purchase'
  FROM quiz AS q
  LEFT JOIN  home_try_on AS  h
    ON q.user_id = h.user_id
  LEFT JOIN purchase AS p
    ON q.user_id = p.user_id
)
SELECT is_purchase, COUNT(DISTINCT(user_id)) AS 'Progressed_to_home_try_on'
FROM cleaned_data
GROUP BY 1;*/

/*SELECT question, response, COUNT(*) AS 'No.who_answered'
FROM survey
GROUP BY 1,2
HAVING question LIKE '5%';*/

/*SELECT COUNT(q.user_id) AS 'No.users_who_completed_the_quiz', COUNT(h.user_id) AS 'No.users_who_recieved_a_hto', COUNT(p.user_id) AS 'No.users_who_made_a_purchase'
FROM quiz AS q
  LEFT JOIN home_try_on AS h
    ON  q.user_id = h.user_id
  LEFT JOIN purchase AS p
    ON q.user_id = p.user_id;*/

/*SELECT question, COUNT(*) AS 'No.who_answered'
FROM survey
GROUP BY 1;*/

/*SELECT color, COUNT(*) AS 'No.who_answered'
FROM quiz
GROUP BY color;*/

/*WITH temp1 AS (
  SELECT user_id, question, response
  FROM survey
  WHERE question LIKE '%4%' AND user_id IN (
    SELECT user_id
    FROM survey
    WHERE question LIKE '%5%')
)

SELECT question, response, COUNT(*) AS 'No.responses'
FROM temp1
GROUP BY 2;*/

/*WITH 
s1 AS (
  SELECT user_id, response
  FROM survey
  WHERE question LIKE '%1%'), 
s2 AS (
  SELECT user_id, response
  FROM survey
  WHERE question LIKE '%2%'), 
s3 AS (
  SELECT user_id, response
  FROM survey
  WHERE question LIKE '%3%'),
s4 AS (
  SELECT user_id, response
  FROM survey
  WHERE question LIKE '%4%')

SELECT COUNT(*) AS 'number_selected', s1.response AS 'Style', s2.response AS 'Fit', s3.response AS 'Shape', s4.response AS 'Color'
FROM s1
LEFT JOIN s2
  ON s1.user_id = s2.user_id
LEFT JOIN s3
  ON s1.user_id = s3.user_id
LEFT JOIN s4
  ON s1.user_id = s4.user_id
GROUP BY 2,3,4,5
HAVING Style NOT NULL AND Fit NOT NULL AND Shape NOT NULL AND 
 Color NOT NULL AND Style = "Men's Styles"
ORDER BY 1 DESC
LIMIT 10;*/

/*SELECT COUNT(*) AS 'number_selected', style, fit, shape, color
FROM quiz
GROUP BY 2,3,4,5
HAVING style = "Men's Styles"
-- Just replace Men's Styels with Women's Styles to get table 8 values
ORDER BY 1 DESC
LIMIT 10;*/
